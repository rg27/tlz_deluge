app_Details = zoho.crm.getRecordById("Applications1",application_id);
new_license_app_details = zoho.crm.getRelatedRecords("New_License_Application1","Applications1",application_id);
number_of_sh = new_license_app_details.getjson("Number_of_Shares");
share_value = new_license_app_details.getjson("Share_Value");
nlf_valid = new_license_app_details.getjson("NLF_Valid");
total_share_capital = new_license_app_details.getjson("Total_Share_Capital");
number_of_shareholders = new_license_app_details.getjson("Number_of_Shareholders");
license_app_details = zoho.crm.getRelatedRecords("Company_Members","Applications1",application_id);
application_stage = app_Details.get("New_Resident_Visa_Stage");
account_name = ifnull(app_Details.get("Account_Name").get("name"),"");
account_id = ifnull(app_Details.get("Account_Name").get("id"),"");
account_details = zoho.crm.getRecordById("Accounts",account_id.toLong());
contact_partner_only = ifnull(account_details.get("Contact_Partner_Only"),"");
info "CONTACT PARTNER ONLY: " + contact_partner_only;
sum_of_number_of_share = 0;
// if(application_stage.containsIgnoreCase("Send Client For Signature") && contact_partner_only == true)
//Terms and Conditions Loop
t_and_c_files = ifnull(app_Details.getjson("Terms_and_Conditions"),null);
info "Terms and Conditions: " + t_and_c_files;
ifza_t_and_c = 0;
tlz_t_and_c = 0;
ifza_office_pricing = 0;
ifza_property_pricelist = 0;
ifza_dxb_pricing = 0;
for each  t_and_c_file in t_and_c_files
{
	doc_name = t_and_c_file.getjson("file_Name");
	if(doc_name.containsIgnoreCase("IFZA") && (doc_name.containsIgnoreCase("terms") || doc_name.containsIgnoreCase("T-C") || doc_name.containsIgnoreCase("T&C")))
	{
		ifza_t_and_c = 1;
		info ifza_t_and_c;
	}
	if((doc_name.containsIgnoreCase("Trade License Zone") || doc_name.containsIgnoreCase("TLZ")) && (doc_name.containsIgnoreCase("terms") || doc_name.containsIgnoreCase("T-C") || doc_name.containsIgnoreCase("T&C")))
	{
		tlz_t_and_c = 1;
		info tlz_t_and_c;
	}
	if((doc_name.containsIgnoreCase("IFZA") || doc_name.containsIgnoreCase("ifza")) && (doc_name.containsIgnoreCase("Office Pricing") || doc_name.containsIgnoreCase("Visa Licenses") || doc_name.containsIgnoreCase("plus")))
	{
		ifza_office_pricing = 1;
		info ifza_office_pricing;
	}
	if((doc_name.containsIgnoreCase("IFZA") || doc_name.containsIgnoreCase("ifza")) && (doc_name.containsIgnoreCase("Property Price List") || doc_name.containsIgnoreCase("Property") || doc_name.containsIgnoreCase("Price List")))
	{
		ifza_property_pricelist = 1;
		info ifza_property_pricelist;
	}
	if(doc_name.containsIgnoreCase("IFZA-DXB Pricing"))
	{
		ifza_dxb_pricing = 1;
		info "IFZA DXB Pricing" + ifza_dxb_pricing;
	}
}
//End of Terms and Conditions
iterator_counter = 0;
passport_empty_iterator = 0;
passport_file_status = true;
general_manager_counter = 0;
cm_valid_counter = 0;
shareholder_counter = 0;
for each  license_app in license_app_details
{
	//Company Members Validator
	vm_validator = ifnull(license_app.get("CM_Valid"),"");
	if(vm_validator == true)
	{
		cm_valid_counter = cm_valid_counter + 1;
	}
	//Validate the passport files if it's empty
	passport_file = ifnull(license_app.get("Passport_file"),"");
	if(passport_file == "" || passport_file == null)
	{
		passport_file_status = false;
		passport_empty_iterator = passport_empty_iterator + 1;
	}
	else
	{
		iterator_counter = iterator_counter + 1;
	}
	gm_role = ifnull(license_app.get("Roles_s"),"");
	//Count the General Manager in Company Members
	if(gm_role.containsIgnoreCase("General Manager"))
	{
		general_manager_counter = general_manager_counter + 1;
	}
	//Count the Shareholders from the Company Members
	if(gm_role.containsIgnoreCase("Shareholder"))
	{
		shareholder_counter = shareholder_counter + 1;
	}
	//Get the total Number of Shares from the Company Members
	sum_of_number_of_share = sum_of_number_of_share + license_app.getJSON("Number_of_Shares");
}
//Shareholder Isvalid validation
if(number_of_shareholders >= 1 && number_of_shareholders < 50 && number_of_shareholders.notContains("."))
{
	number_of_shareholder_valid = true;
}
else
{
	number_of_shareholder_valid = false;
}
//total share capital Isvalid validation
tsc_remainder = total_share_capital % 1000;
if(total_share_capital >= 10000 && total_share_capital <= 10000000 && tsc_remainder == 0)
{
	total_share_capital_isValid = true;
}
else
{
	total_share_capital_isValid = false;
}
//share value Isvalid validation
if(share_value >= 10 && share_value < total_share_capital)
{
	share_value_isvalid = true;
}
else
{
	share_value_isvalid = false;
}
//Number of Shares isValid? Validation 
number_shares_remainder = number_of_sh % 1;
if(number_shares_remainder == 0)
{
	number_of_shares_isValid = true;
}
else
{
	number_of_shares_isValid = false;
}
info "Shareholder Counter: " + shareholder_counter;
info "Total Number of Shareholder: " + number_of_shareholders;
if((passport_file_status != false || passport_file_status == true) && general_manager_counter == 1 && cm_valid_counter == iterator_counter && t_and_c_files != "" && ifza_t_and_c == 1 && tlz_t_and_c == 1 && ifza_office_pricing == 1 && ifza_property_pricelist == 1 && contact_partner_only == false && application_stage.containsIgnoreCase("Send Client For Signature") && number_of_sh == sum_of_number_of_share && shareholder_counter == number_of_shareholders && number_of_shareholder_valid == true && total_share_capital_isValid == true && share_value_isvalid == true && number_of_shares_isValid == true && nlf_valid == true && ifza_dxb_pricing == 1)
{
	if(app_Details.get("Trigger_1_Depends_on_triggered_button") != "Resend New License App Form")
	{
		//Download the second file, Trigger the Terms and Conditions and other attachments
		mp = Map();
		mp.put("Trigger_1_Depends_on_triggered_button","Resend New License App Form");
		res = zoho.crm.updateRecord("Applications1",application_id,mp,{"trigger":{"workflow"}});
		return "Sucessfully Resend the New License Application Form!";
	}
	else
	{
		return "Unable to Resend the New License App Form";
	}
}
else
{
	//NLF Validation
	if(nlf_valid == false)
	{
		return "Unable to resend, the New License Form is not Valid";
	}
	//NUmber of Share isValid validation
	if(number_of_shares_isValid == false)
	{
		return "Unable to resend, the 'Number of Shares' is not a whole number";
	}
	//Share Value Validation
	if(share_value_isvalid == false)
	{
		return "Unable to resend, the 'Share Value' should be whole number. The value should be greater than or equal to 10 but less than total share capital";
	}
	//Total Share Capital isValid Validation
	if(total_share_capital_isValid == false)
	{
		return "Unable to resend, the 'Total Share Capital' should be whole number from 10,000 - 10,000,000. And should be in multiples of 1,000";
	}
	//Number of Shareholder isValid validation
	if(number_of_shareholder_valid == false)
	{
		return "Unable to resend, the 'Number of Shareholder' should be whole number from 1-50";
	}
	//Number of Shareholder validation
	if(number_of_shareholders != shareholder_counter)
	{
		return "Unable to resend, the Number of Shareholders is not Equal to Total Number of Shareholders from Company Members";
	}
	//Number of Share Validation
	if(number_of_sh != sum_of_number_of_share)
	{
		return "Unable to resend, the Number of Shares is not equal to Total Number of Shares from Company Members";
	}
	//Contact Parner validation
	info "Contact Partner Only: " + contact_partner_only;
	if(contact_partner_only == true)
	{
		return "Unable to resend, the 'Contact Partner only' should be False";
	}
	//Some Company Members has empty passport files
	if(passport_file_status == false)
	{
		return "Unable to resend, the number of Empty Company Members Passport Files: " + passport_empty_iterator;
	}
	//Some Company Members has multiple or No GM
	if(general_manager_counter != 1)
	{
		return "Unable to resend, the number of General Manager: " + general_manager_counter;
	}
	if(cm_valid_counter != iterator_counter)
	{
		return "Unable to resend, some Company Members are not valid or completed";
	}
	if(t_and_c_files == null || t_and_c_files == "null")
	{
		return "Unable to resend, the T&Cs For Signing is empty!";
	}
	if(ifza_t_and_c == 0)
	{
		return "Unable to resend, there is no added IFZA Terms & Conditions file.";
	}
	if(tlz_t_and_c == 0)
	{
		return "Unable to resend, there is no added TLZ Terms and Conditions file.";
	}
	if(ifza_office_pricing == 0)
	{
		return "Unable to resend, there is no added IFZA Office Pricing file.";
	}
	if(ifza_property_pricelist == 0)
	{
		return "Unable to resend, there is no added IFZA Property List file.";
	}
	if(ifza_dxb_pricing == 0)
	{
		return "Unable to resend, there is no added IFZA-DxB Pricing file.";
	}
	//Stage validation
	if(application_stage.notContains("Send Client For Signature"))
	{
		return "Unable to resend, the current Application Stage should be 'Send Client for Signature' ";
	}
	return "";
}
